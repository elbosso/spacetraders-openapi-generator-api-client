/*
 * SpaceTraders API
 * SpaceTraders is an open-universe game and learning platform that offers a set of HTTP endpoints to control a fleet of ships and explore a multiplayer universe.  The API is documented using [OpenAPI](https://github.com/SpaceTradersAPI/api-docs). You can send your first request right here in your browser to check the status of the game server.  ```json http {   \"method\": \"GET\",   \"url\": \"https://api.spacetraders.io/v2\", } ```  Unlike a traditional game, SpaceTraders does not have a first-party client or app to play the game. Instead, you can use the API to build your own client, write a script to automate your ships, or try an app built by the community.  We have a [Discord channel](https://discord.com/invite/jh6zurdWk5) where you can share your projects, ask questions, and get help from other players.   
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: joel@spacetraders.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.elbosso.spacetraders.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * RegisterRequest
 */
@JsonPropertyOrder({
  RegisterRequest.JSON_PROPERTY_FACTION,
  RegisterRequest.JSON_PROPERTY_SYMBOL,
  RegisterRequest.JSON_PROPERTY_EMAIL
})
@JsonTypeName("register_request")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-06-05T09:25:51.979579Z[Etc/UTC]")
public class RegisterRequest {
  public static final String JSON_PROPERTY_FACTION = "faction";
  private Object faction = null;

  public static final String JSON_PROPERTY_SYMBOL = "symbol";
  private String symbol;

  public static final String JSON_PROPERTY_EMAIL = "email";
  private String email;

  public RegisterRequest() {
  }

  public RegisterRequest faction(Object faction) {
    
    this.faction = faction;
    return this;
  }

   /**
   * The faction you choose determines your headquarters.
   * @return faction
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FACTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getFaction() {
    return faction;
  }


  @JsonProperty(JSON_PROPERTY_FACTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFaction(Object faction) {
    this.faction = faction;
  }


  public RegisterRequest symbol(String symbol) {
    
    this.symbol = symbol;
    return this;
  }

   /**
   * How other agents will see your ships and information.
   * @return symbol
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSymbol() {
    return symbol;
  }


  @JsonProperty(JSON_PROPERTY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }


  public RegisterRequest email(String email) {
    
    this.email = email;
    return this;
  }

   /**
   * Your email address. This is used if you reserved your call sign between resets.
   * @return email
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEmail() {
    return email;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmail(String email) {
    this.email = email;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RegisterRequest registerRequest = (RegisterRequest) o;
    return Objects.equals(this.faction, registerRequest.faction) &&
        Objects.equals(this.symbol, registerRequest.symbol) &&
        Objects.equals(this.email, registerRequest.email);
  }

  @Override
  public int hashCode() {
    return Objects.hash(faction, symbol, email);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RegisterRequest {\n");
    sb.append("    faction: ").append(toIndentedString(faction)).append("\n");
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

