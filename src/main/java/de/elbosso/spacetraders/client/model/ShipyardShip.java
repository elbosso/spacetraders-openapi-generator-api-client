/*
 * SpaceTraders API
 * SpaceTraders is an open-universe game and learning platform that offers a set of HTTP endpoints to control a fleet of ships and explore a multiplayer universe.  The API is documented using [OpenAPI](https://github.com/SpaceTradersAPI/api-docs). You can send your first request right here in your browser to check the status of the game server.  ```json http {   \"method\": \"GET\",   \"url\": \"https://api.spacetraders.io/v2\", } ```  Unlike a traditional game, SpaceTraders does not have a first-party client or app to play the game. Instead, you can use the API to build your own client, write a script to automate your ships, or try an app built by the community.  We have a [Discord channel](https://discord.com/invite/jh6zurdWk5) where you can share your projects, ask questions, and get help from other players.   
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: joel@spacetraders.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.elbosso.spacetraders.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import de.elbosso.spacetraders.client.model.ShipEngine;
import de.elbosso.spacetraders.client.model.ShipFrame;
import de.elbosso.spacetraders.client.model.ShipModule;
import de.elbosso.spacetraders.client.model.ShipMount;
import de.elbosso.spacetraders.client.model.ShipReactor;
import de.elbosso.spacetraders.client.model.ShipType;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * 
 */
@JsonPropertyOrder({
  ShipyardShip.JSON_PROPERTY_TYPE,
  ShipyardShip.JSON_PROPERTY_NAME,
  ShipyardShip.JSON_PROPERTY_DESCRIPTION,
  ShipyardShip.JSON_PROPERTY_PURCHASE_PRICE,
  ShipyardShip.JSON_PROPERTY_FRAME,
  ShipyardShip.JSON_PROPERTY_REACTOR,
  ShipyardShip.JSON_PROPERTY_ENGINE,
  ShipyardShip.JSON_PROPERTY_MODULES,
  ShipyardShip.JSON_PROPERTY_MOUNTS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-06-05T09:25:51.979579Z[Etc/UTC]")
public class ShipyardShip {
  public static final String JSON_PROPERTY_TYPE = "type";
  private ShipType type;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_PURCHASE_PRICE = "purchasePrice";
  private Integer purchasePrice;

  public static final String JSON_PROPERTY_FRAME = "frame";
  private ShipFrame frame;

  public static final String JSON_PROPERTY_REACTOR = "reactor";
  private ShipReactor reactor;

  public static final String JSON_PROPERTY_ENGINE = "engine";
  private ShipEngine engine;

  public static final String JSON_PROPERTY_MODULES = "modules";
  private List<ShipModule> modules = new ArrayList<>();

  public static final String JSON_PROPERTY_MOUNTS = "mounts";
  private List<ShipMount> mounts = new ArrayList<>();

  public ShipyardShip() {
  }

  public ShipyardShip type(ShipType type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ShipType getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(ShipType type) {
    this.type = type;
  }


  public ShipyardShip name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public ShipyardShip description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDescription(String description) {
    this.description = description;
  }


  public ShipyardShip purchasePrice(Integer purchasePrice) {
    
    this.purchasePrice = purchasePrice;
    return this;
  }

   /**
   * Get purchasePrice
   * @return purchasePrice
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PURCHASE_PRICE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getPurchasePrice() {
    return purchasePrice;
  }


  @JsonProperty(JSON_PROPERTY_PURCHASE_PRICE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPurchasePrice(Integer purchasePrice) {
    this.purchasePrice = purchasePrice;
  }


  public ShipyardShip frame(ShipFrame frame) {
    
    this.frame = frame;
    return this;
  }

   /**
   * Get frame
   * @return frame
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FRAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ShipFrame getFrame() {
    return frame;
  }


  @JsonProperty(JSON_PROPERTY_FRAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFrame(ShipFrame frame) {
    this.frame = frame;
  }


  public ShipyardShip reactor(ShipReactor reactor) {
    
    this.reactor = reactor;
    return this;
  }

   /**
   * Get reactor
   * @return reactor
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REACTOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ShipReactor getReactor() {
    return reactor;
  }


  @JsonProperty(JSON_PROPERTY_REACTOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setReactor(ShipReactor reactor) {
    this.reactor = reactor;
  }


  public ShipyardShip engine(ShipEngine engine) {
    
    this.engine = engine;
    return this;
  }

   /**
   * Get engine
   * @return engine
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ENGINE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ShipEngine getEngine() {
    return engine;
  }


  @JsonProperty(JSON_PROPERTY_ENGINE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEngine(ShipEngine engine) {
    this.engine = engine;
  }


  public ShipyardShip modules(List<ShipModule> modules) {
    
    this.modules = modules;
    return this;
  }

  public ShipyardShip addModulesItem(ShipModule modulesItem) {
    if (this.modules == null) {
      this.modules = new ArrayList<>();
    }
    this.modules.add(modulesItem);
    return this;
  }

   /**
   * Get modules
   * @return modules
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MODULES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<ShipModule> getModules() {
    return modules;
  }


  @JsonProperty(JSON_PROPERTY_MODULES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setModules(List<ShipModule> modules) {
    this.modules = modules;
  }


  public ShipyardShip mounts(List<ShipMount> mounts) {
    
    this.mounts = mounts;
    return this;
  }

  public ShipyardShip addMountsItem(ShipMount mountsItem) {
    if (this.mounts == null) {
      this.mounts = new ArrayList<>();
    }
    this.mounts.add(mountsItem);
    return this;
  }

   /**
   * Get mounts
   * @return mounts
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MOUNTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<ShipMount> getMounts() {
    return mounts;
  }


  @JsonProperty(JSON_PROPERTY_MOUNTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMounts(List<ShipMount> mounts) {
    this.mounts = mounts;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShipyardShip shipyardShip = (ShipyardShip) o;
    return Objects.equals(this.type, shipyardShip.type) &&
        Objects.equals(this.name, shipyardShip.name) &&
        Objects.equals(this.description, shipyardShip.description) &&
        Objects.equals(this.purchasePrice, shipyardShip.purchasePrice) &&
        Objects.equals(this.frame, shipyardShip.frame) &&
        Objects.equals(this.reactor, shipyardShip.reactor) &&
        Objects.equals(this.engine, shipyardShip.engine) &&
        Objects.equals(this.modules, shipyardShip.modules) &&
        Objects.equals(this.mounts, shipyardShip.mounts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, name, description, purchasePrice, frame, reactor, engine, modules, mounts);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShipyardShip {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    purchasePrice: ").append(toIndentedString(purchasePrice)).append("\n");
    sb.append("    frame: ").append(toIndentedString(frame)).append("\n");
    sb.append("    reactor: ").append(toIndentedString(reactor)).append("\n");
    sb.append("    engine: ").append(toIndentedString(engine)).append("\n");
    sb.append("    modules: ").append(toIndentedString(modules)).append("\n");
    sb.append("    mounts: ").append(toIndentedString(mounts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

