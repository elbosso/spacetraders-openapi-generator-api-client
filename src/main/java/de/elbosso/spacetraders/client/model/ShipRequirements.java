/*
 * SpaceTraders API
 * SpaceTraders is an open-universe game and learning platform that offers a set of HTTP endpoints to control a fleet of ships and explore a multiplayer universe.  The API is documented using [OpenAPI](https://github.com/SpaceTradersAPI/api-docs). You can send your first request right here in your browser to check the status of the game server.  ```json http {   \"method\": \"GET\",   \"url\": \"https://api.spacetraders.io/v2\", } ```  Unlike a traditional game, SpaceTraders does not have a first-party client or app to play the game. Instead, you can use the API to build your own client, write a script to automate your ships, or try an app built by the community.  We have a [Discord channel](https://discord.com/invite/jh6zurdWk5) where you can share your projects, ask questions, and get help from other players.   
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: joel@spacetraders.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.elbosso.spacetraders.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * The requirements for installation on a ship
 */
@JsonPropertyOrder({
  ShipRequirements.JSON_PROPERTY_POWER,
  ShipRequirements.JSON_PROPERTY_CREW,
  ShipRequirements.JSON_PROPERTY_SLOTS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-06-05T09:25:51.979579Z[Etc/UTC]")
public class ShipRequirements {
  public static final String JSON_PROPERTY_POWER = "power";
  private Integer power;

  public static final String JSON_PROPERTY_CREW = "crew";
  private Integer crew;

  public static final String JSON_PROPERTY_SLOTS = "slots";
  private Integer slots;

  public ShipRequirements() {
  }

  public ShipRequirements power(Integer power) {
    
    this.power = power;
    return this;
  }

   /**
   * The amount of power required from the reactor.
   * @return power
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POWER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPower() {
    return power;
  }


  @JsonProperty(JSON_PROPERTY_POWER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPower(Integer power) {
    this.power = power;
  }


  public ShipRequirements crew(Integer crew) {
    
    this.crew = crew;
    return this;
  }

   /**
   * The number of crew required for operation.
   * @return crew
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getCrew() {
    return crew;
  }


  @JsonProperty(JSON_PROPERTY_CREW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCrew(Integer crew) {
    this.crew = crew;
  }


  public ShipRequirements slots(Integer slots) {
    
    this.slots = slots;
    return this;
  }

   /**
   * The number of module slots required for installation.
   * @return slots
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SLOTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSlots() {
    return slots;
  }


  @JsonProperty(JSON_PROPERTY_SLOTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSlots(Integer slots) {
    this.slots = slots;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShipRequirements shipRequirements = (ShipRequirements) o;
    return Objects.equals(this.power, shipRequirements.power) &&
        Objects.equals(this.crew, shipRequirements.crew) &&
        Objects.equals(this.slots, shipRequirements.slots);
  }

  @Override
  public int hashCode() {
    return Objects.hash(power, crew, slots);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShipRequirements {\n");
    sb.append("    power: ").append(toIndentedString(power)).append("\n");
    sb.append("    crew: ").append(toIndentedString(crew)).append("\n");
    sb.append("    slots: ").append(toIndentedString(slots)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

