/*
 * SpaceTraders API
 * SpaceTraders is an open-universe game and learning platform that offers a set of HTTP endpoints to control a fleet of ships and explore a multiplayer universe.  The API is documented using [OpenAPI](https://github.com/SpaceTradersAPI/api-docs). You can send your first request right here in your browser to check the status of the game server.  ```json http {   \"method\": \"GET\",   \"url\": \"https://api.spacetraders.io/v2\", } ```  Unlike a traditional game, SpaceTraders does not have a first-party client or app to play the game. Instead, you can use the API to build your own client, write a script to automate your ships, or try an app built by the community.  We have a [Discord channel](https://discord.com/invite/jh6zurdWk5) where you can share your projects, ask questions, and get help from other players.   
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: joel@spacetraders.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.elbosso.spacetraders.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import de.elbosso.spacetraders.client.model.ShipCargoItem;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ShipCargo
 */
@JsonPropertyOrder({
  ShipCargo.JSON_PROPERTY_CAPACITY,
  ShipCargo.JSON_PROPERTY_UNITS,
  ShipCargo.JSON_PROPERTY_INVENTORY
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-06-05T09:25:51.979579Z[Etc/UTC]")
public class ShipCargo {
  public static final String JSON_PROPERTY_CAPACITY = "capacity";
  private Integer capacity;

  public static final String JSON_PROPERTY_UNITS = "units";
  private Integer units;

  public static final String JSON_PROPERTY_INVENTORY = "inventory";
  private List<ShipCargoItem> inventory = new ArrayList<>();

  public ShipCargo() {
  }

  public ShipCargo capacity(Integer capacity) {
    
    this.capacity = capacity;
    return this;
  }

   /**
   * The max number of items that can be stored in the cargo hold.
   * minimum: 0
   * @return capacity
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CAPACITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getCapacity() {
    return capacity;
  }


  @JsonProperty(JSON_PROPERTY_CAPACITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCapacity(Integer capacity) {
    this.capacity = capacity;
  }


  public ShipCargo units(Integer units) {
    
    this.units = units;
    return this;
  }

   /**
   * The number of items currently stored in the cargo hold.
   * minimum: 0
   * @return units
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_UNITS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getUnits() {
    return units;
  }


  @JsonProperty(JSON_PROPERTY_UNITS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUnits(Integer units) {
    this.units = units;
  }


  public ShipCargo inventory(List<ShipCargoItem> inventory) {
    
    this.inventory = inventory;
    return this;
  }

  public ShipCargo addInventoryItem(ShipCargoItem inventoryItem) {
    if (this.inventory == null) {
      this.inventory = new ArrayList<>();
    }
    this.inventory.add(inventoryItem);
    return this;
  }

   /**
   * The items currently in the cargo hold.
   * @return inventory
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_INVENTORY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<ShipCargoItem> getInventory() {
    return inventory;
  }


  @JsonProperty(JSON_PROPERTY_INVENTORY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setInventory(List<ShipCargoItem> inventory) {
    this.inventory = inventory;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShipCargo shipCargo = (ShipCargo) o;
    return Objects.equals(this.capacity, shipCargo.capacity) &&
        Objects.equals(this.units, shipCargo.units) &&
        Objects.equals(this.inventory, shipCargo.inventory);
  }

  @Override
  public int hashCode() {
    return Objects.hash(capacity, units, inventory);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShipCargo {\n");
    sb.append("    capacity: ").append(toIndentedString(capacity)).append("\n");
    sb.append("    units: ").append(toIndentedString(units)).append("\n");
    sb.append("    inventory: ").append(toIndentedString(inventory)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

