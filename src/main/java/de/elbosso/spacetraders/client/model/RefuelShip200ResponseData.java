/*
 * SpaceTraders API
 * SpaceTraders is an open-universe game and learning platform that offers a set of HTTP endpoints to control a fleet of ships and explore a multiplayer universe.  The API is documented using [OpenAPI](https://github.com/SpaceTradersAPI/api-docs). You can send your first request right here in your browser to check the status of the game server.  ```json http {   \"method\": \"GET\",   \"url\": \"https://api.spacetraders.io/v2\", } ```  Unlike a traditional game, SpaceTraders does not have a first-party client or app to play the game. Instead, you can use the API to build your own client, write a script to automate your ships, or try an app built by the community.  We have a [Discord channel](https://discord.com/invite/jh6zurdWk5) where you can share your projects, ask questions, and get help from other players.   
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: joel@spacetraders.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.elbosso.spacetraders.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import de.elbosso.spacetraders.client.model.Agent;
import de.elbosso.spacetraders.client.model.MarketTransaction;
import de.elbosso.spacetraders.client.model.ShipFuel;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * RefuelShip200ResponseData
 */
@JsonPropertyOrder({
  RefuelShip200ResponseData.JSON_PROPERTY_AGENT,
  RefuelShip200ResponseData.JSON_PROPERTY_FUEL,
  RefuelShip200ResponseData.JSON_PROPERTY_TRANSACTION
})
@JsonTypeName("refuel_ship_200_response_data")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-06-05T09:25:51.979579Z[Etc/UTC]")
public class RefuelShip200ResponseData {
  public static final String JSON_PROPERTY_AGENT = "agent";
  private Agent agent;

  public static final String JSON_PROPERTY_FUEL = "fuel";
  private ShipFuel fuel;

  public static final String JSON_PROPERTY_TRANSACTION = "transaction";
  private MarketTransaction transaction;

  public RefuelShip200ResponseData() {
  }

  public RefuelShip200ResponseData agent(Agent agent) {
    
    this.agent = agent;
    return this;
  }

   /**
   * Get agent
   * @return agent
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AGENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Agent getAgent() {
    return agent;
  }


  @JsonProperty(JSON_PROPERTY_AGENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAgent(Agent agent) {
    this.agent = agent;
  }


  public RefuelShip200ResponseData fuel(ShipFuel fuel) {
    
    this.fuel = fuel;
    return this;
  }

   /**
   * Get fuel
   * @return fuel
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FUEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ShipFuel getFuel() {
    return fuel;
  }


  @JsonProperty(JSON_PROPERTY_FUEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFuel(ShipFuel fuel) {
    this.fuel = fuel;
  }


  public RefuelShip200ResponseData transaction(MarketTransaction transaction) {
    
    this.transaction = transaction;
    return this;
  }

   /**
   * Get transaction
   * @return transaction
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TRANSACTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public MarketTransaction getTransaction() {
    return transaction;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTransaction(MarketTransaction transaction) {
    this.transaction = transaction;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RefuelShip200ResponseData refuelShip200ResponseData = (RefuelShip200ResponseData) o;
    return Objects.equals(this.agent, refuelShip200ResponseData.agent) &&
        Objects.equals(this.fuel, refuelShip200ResponseData.fuel) &&
        Objects.equals(this.transaction, refuelShip200ResponseData.transaction);
  }

  @Override
  public int hashCode() {
    return Objects.hash(agent, fuel, transaction);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RefuelShip200ResponseData {\n");
    sb.append("    agent: ").append(toIndentedString(agent)).append("\n");
    sb.append("    fuel: ").append(toIndentedString(fuel)).append("\n");
    sb.append("    transaction: ").append(toIndentedString(transaction)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

