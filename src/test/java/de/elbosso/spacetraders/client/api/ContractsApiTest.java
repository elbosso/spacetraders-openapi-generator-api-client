/*
 * SpaceTraders API
 * SpaceTraders is an open-universe game and learning platform that offers a set of HTTP endpoints to control a fleet of ships and explore a multiplayer universe.  The API is documented using [OpenAPI](https://github.com/SpaceTradersAPI/api-docs). You can send your first request right here in your browser to check the status of the game server.  ```json http {   \"method\": \"GET\",   \"url\": \"https://api.spacetraders.io/v2\", } ```  Unlike a traditional game, SpaceTraders does not have a first-party client or app to play the game. Instead, you can use the API to build your own client, write a script to automate your ships, or try an app built by the community.  We have a [Discord channel](https://discord.com/invite/jh6zurdWk5) where you can share your projects, ask questions, and get help from other players.   
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: joel@spacetraders.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.elbosso.spacetraders.client.api;

import de.elbosso.spacetraders.client.invoker.ApiException;
import de.elbosso.spacetraders.client.model.AcceptContract200Response;
import de.elbosso.spacetraders.client.model.DeliverContract200Response;
import de.elbosso.spacetraders.client.model.DeliverContractRequest;
import de.elbosso.spacetraders.client.model.FulfillContract200Response;
import de.elbosso.spacetraders.client.model.GetContract200Response;
import de.elbosso.spacetraders.client.model.GetContracts200Response;
import org.junit.Test;
import org.junit.Ignore;

import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ContractsApi
 */
@Ignore
public class ContractsApiTest {

    private final ContractsApi api = new ContractsApi();

    
    /**
     * Accept Contract
     *
     * Accept a contract.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void acceptContractTest()  throws ApiException
    {
        String contractId = null;
        AcceptContract200Response response = api.acceptContract(contractId);

        // TODO: test validations
    }
    
    /**
     * Deliver Contract
     *
     * Deliver cargo on a given contract.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deliverContractTest()  throws ApiException{
        String contractId = null;
        DeliverContractRequest deliverContractRequest = null;
        DeliverContract200Response response = api.deliverContract(contractId, deliverContractRequest);

        // TODO: test validations
    }
    
    /**
     * Fulfill Contract
     *
     * Fulfill a contract
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fulfillContractTest()  throws ApiException{
        String contractId = null;
        FulfillContract200Response response = api.fulfillContract(contractId);

        // TODO: test validations
    }
    
    /**
     * Get Contract
     *
     * Get the details of a contract by ID.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getContractTest()  throws ApiException{
        String contractId = null;
        GetContract200Response response = api.getContract(contractId);

        // TODO: test validations
    }
    
    /**
     * List Contracts
     *
     * List all of your contracts.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getContractsTest()  throws ApiException{
        Integer page = null;
        Integer limit = null;
        GetContracts200Response response = api.getContracts(page, limit);

        // TODO: test validations
    }
    
}
